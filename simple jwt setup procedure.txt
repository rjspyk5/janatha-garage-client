JWT configaration

********************************At Backend**********************

//install
npm i jsonwebtoken cookie-parser


//import
var jwt = require("jsonwebtoken");
var cookieParser = require("cookie-parser");


//midleware setup
app.use(cookieParser());
//update cors setting
app.use(
  cors({
    origin: ["http://localhost:5174", "http://localhost:5173"], //eikhan e production eer khetre production er adress dite hbe//
    credentials: true,
  })
);





//eikhan e eka secret random number generate kora lagbe eitar jnnno valo system hocce cmd teh 
-node likhbo
tarpor nicher oita dile ekta random number dibe
-require('crypto').randomBytes(64).toString('hex')
tarpor oi random number tah ke niye .env er vhitor dukabo access_token varibale er vhitor taholey hbe

//token api create
 app.post("/jwt", async (req, res) => {
      const user = req.body;
      const token = jwt.sign(user, process.env.access_token, {
        expiresIn: "1h",
      });

      res
        .cookie("token", token, {
          httpOnly: true,
          secure: true,
          sameSite: "none",
        })
        .send({ success: true });
    });

 app.post("/logout", async (req, res) => {
      const user = req.body;
      res.clearCookie("token", { maxAge: 0 }).send({ success: true });
    });


//custom middleware make

const verifyToken = async (req, res, next) => {
  const token = req.cookies?.token;
  if (!token) {
    return res.status(401).send({ message: "not authorized" });
  }
  jwt.verify(token, process.env.access_token, (err, decoded) => {
    if (err) {
      return res.status(401).send({ message: "unauthorized" });
    }
    req.user = decoded;
    next();
  });
};

//Eibar proti tah api teh jeikhan e jeikhan a amra oi user er data chara onno data dibo na orthath oi user er datay sudhu oi user ke deaar jnno api sequre korbo oikhan api setup korar somoy second parameter hisabe verifyToken naam e amr banano middle ware diye dibo and oitar vhitor e codntion check korte parbo je jar email shey tar token niye e access er chesta korse kina
example:
 app.get("/bookings", verifyToken, async (req, res) => {
      const email = req.query.email;
      if (email !== req.user.email) {
        return res.status(401).send({ message: "forbbiden" });
      }
      let query = {};
      if (email) {
        query = { email: email };
      }
      const result = await ordersCollection.find(query).toArray();
      res.send(result);
    });

************************************************************************

*******************At client******************

//Auth Provider er useEffect er  vhitor ei setting dite hbe//
example of useeffect

 useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      const userEmail = currentUser?.email || user?.email;
      const loggedUser = { email: userEmail };
      setuser(currentUser);
      setloading(false);
      if (currentUser) {
        axios
          .post(`http://localhost:5000/jwt`, loggedUser, {
            withCredentials: true,
          })
          .then((res) => {
            console.log(res.data);
          })
          .catch((err) => console.log(err));
      } else {
        axios
          .post("http://localhost:5000/logout", loggedUser, {
            withCredentials: true,
          })
          .then((res) => console.log(res))
          .catch((er) => console.log(er));
      }
    });

    return () => {
      return unsubscribe();
    };
  }, []);

//abong always axios diye jekono api req pathanor shomy eivabe opathabo
axios.get(url,{ withCredentials: true })
axios.post(url,data,{ withCredentials: true })